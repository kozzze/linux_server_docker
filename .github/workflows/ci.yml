name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/web-app  

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: kubsu
          POSTGRES_PASSWORD: kubsu
          POSTGRES_DB: kubsu
        ports:
          - 5432:5432
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./docker  
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Run tests
        run: |
          docker run --network=host -e DATABASE_URL="postgresql+psycopg://kubsu:kubsu@127.0.0.1:5432/kubsu" ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest pytest tests

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          if [ -n "$SSH_PASSPHRASE" ]; then
            echo "Ключ защищён паролем"
            ssh-keygen -p -P "$SSH_PASSPHRASE" -N "" -f ~/.ssh/id_rsa
          fi
          ssh-keyscan -p ${{ secrets.PORT }} ${{ secrets.HOST }} >> ~/.ssh/known_hosts
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}

      - name: Tag image for deployment
        run: docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest myapp:final

      - name: Deploy to remote server
        run: |
          docker save myapp:final | ssh -i ~/.ssh/id_rsa \
          -p ${{ secrets.PORT }} \
          ${{ secrets.USER }}@${{ secrets.HOST }} \
          "podman load && podman tag myapp:final myapp:final"
          
          ssh -i ~/.ssh/id_rsa \
          -p ${{ secrets.PORT }} \
          ${{ secrets.USER }}@${{ secrets.HOST }} \
          "podman stop myapp || true && \
          podman rm myapp || true && \
          podman run -d --name myapp \
          --network=host \
          myapp:final"
